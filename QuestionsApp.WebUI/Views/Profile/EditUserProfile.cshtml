@model QuestionsApp.WebUI.ViewModels.UserProfileViewModel

@{
    ViewBag.Title = "EditUserProfile";
}

<h2>Edit userEntity profile</h2>

@using (Html.BeginForm("EditUserProfile", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValuserIdationSummary(true, "", new { @class = "text-danger" })
        @Html.HuserIddenFor(model => model.UserProfileId)
        @Html.HuserIddenFor(model => model.UserId)
        @Html.HuserIddenFor(model => model.OldPhotoUrl)

        <div class="form-group">
            @Html.LabelFor(model => model.PhotoUrl, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                    @*@if (String.IsNullOrEmpty(Model.PhotoUrl))
                    {
                        <img src="../../Content/images/default-avatar.png" class="thumbnail" alt="avatar"/>
                    }
                    else
                    {
                        <img src="@Url.Content(Model.PhotoUrl)" class="thumbnail" alt="avatar"/>
                    }*@
                    @Html.TextBoxFor(model => model.PhotoFile, new { @type = "file"@*, @multipleclass="file-loading"*@ })
                    @Html.ValuserIdationMessageFor(model => model.PhotoFile)
                    @*<input userId="userEntitypic" name="userEntitypic" type="file" multiple class="file-loading">*@
                    @*<div class="btn-group">
                        <a class="file-input-wrapper btn btn-default btn-sm">
                            <span class="glyphicon glyphicon-folder-open"></span>
                            <input type="file">
                        </a>
                        <button type="button" class="btn btn-default btn-sm">
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                    </div>*@
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValuserIdationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecondName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SecondName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValuserIdationMessageFor(model => model.SecondName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FamilyName, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.FamilyName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValuserIdationMessageFor(model => model.FamilyName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicEmail, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PublicEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValuserIdationMessageFor(model => model.PublicEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicPhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PublicPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValuserIdationMessageFor(model => model.PublicPhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.About, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.About, new { @class = "form-control", @rows = "5" })
                @Html.ValuserIdationMessageFor(model => model.About, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    $(document).on('ready', function() {
        $("#picfile").fileinput({ showCaption: false });
    });
    $('input[type=file]').bootstrapFileInput();
    $('.file-inputs').bootstrapFileInput();
</script>

<script src="~/Scripts/bootstrap.file-input.js"></script>


